name: Release Packaging

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      font_name:
        description: '包的字体名称前缀（覆盖默认设置） / Font name prefix for packages (overrides default)'
        required: false
        default: 'Plangothic'
      tag_version:
        description: '手动运行时的标签版本 / Tag version for manual run'
        required: false
        default: ''

env:
  DEFAULT_FONT_NAME: Plangothic

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_vars.outputs.version }}
      font_name: ${{ steps.set_vars.outputs.font_name }}
    steps:
      - name: 签出代码 / Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set VERSION and FONT_NAME
        id: set_vars
        run: |
          # 1. 计算版本号
          if [[ "${{ github.event_name }}" == "release" ]]; then
            V=${GITHUB_REF#refs/tags/}
          elif [[ -n "${{ github.event.inputs.tag_version }}" ]]; then
            V=${{ github.event.inputs.tag_version }}
          else
            V=dev-$(date +'%Y%m%d-%H%M%S')
          fi
          # 2. 计算字体名
          FN="${DEFAULT_FONT_NAME}"
          if [[ -n "${{ github.event.inputs.font_name }}" ]]; then
            FN="${{ github.event.inputs.font_name }}"
          fi
          echo "version=$V" >> $GITHUB_OUTPUT
          echo "font_name=$FN" >> $GITHUB_OUTPUT

      - name: Install p7zip
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full

      - name: 验证字体文件夹 / Validate font folders
        run: |
          for d in otf static web; do
            if [[ -d "fonts/$d" ]]; then
              echo "✓ fonts/$d"
            else
              echo "⚠ skip fonts/$d"
            fi
          done

  package:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg: [OTF, Static, Web, Super]
    env:
      VERSION: ${{ needs.prepare.outputs.version }}
      FONT_NAME: ${{ needs.prepare.outputs.font_name }}
      PKG: ${{ matrix.pkg }}
    steps:
      - name: 签出代码 / Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 准备打包目录 / Prepare package dir
        shell: bash
        run: |
          set -euo pipefail

          echo "Packaging $PKG…"
          mkdir -p dist

          TARGET="dist/${FONT_NAME}-${PKG}-${VERSION}"
          mkdir -p "$TARGET"

          if [[ "$PKG" == "Super" ]]; then
            cp -r fonts/* "$TARGET"/
          else
            sub=$(echo "$PKG" | tr '[:upper:]' '[:lower:]')
            if [[ -d "fonts/$sub" ]]; then
              cp -r "fonts/$sub"/* "$TARGET"/
            else
              echo "⚠ fonts/$sub not found, skipping"
            fi
          fi

      - name: Compress to .zip & .7z
        shell: bash
        run: |
          cd dist
          base="${FONT_NAME}-${PKG}-${VERSION}"
          zip -qr "${base}.zip" "$base"
          7z a -t7z -mx=9 "${base}.7z" "$base"
          ls -lh "${base}."*

      - name: 上传工件(手动运行) / Upload artifact (manual run)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FONT_NAME }}-${{ matrix.pkg }}-${{ env.VERSION }}.7z
          path: dist/${{ env.FONT_NAME }}-${{ matrix.pkg }}-${{ env.VERSION }}.7z
          retention-days: 7

      - name: 上传到发行版 / Upload to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/${{ env.FONT_NAME }}-${{ matrix.pkg }}-${{ env.VERSION }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
